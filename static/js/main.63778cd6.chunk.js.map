{"version":3,"sources":["Firebase/firebase.js","API/Database.js","Styles/NavbarStyles.js","Navbar.js","Home/Hashtag.js","API/Storage.js","Styles/TweetStyles.js","Home/TweetCreator.js","Pages/Loading.js","Styles/TweetListStyles.js","Home/TweetList.js","Home/HomePresenter.js","Home/HomeContainer.js","MyProfile/MySweetList.js","Styles/ProfileStyles.js","Styles/SignStyles.js","MyProfile/MyProfilePresenter.js","MyProfile/MyProfileContainer.js","Welcome.js","SignIn/SignInPresenter.js","SignUp/SignUpPresenter.js","SignUp/SignUpContainer.js","SignIn/SignInContainer.js","Pages/NotFound.js","API/Login.js","PublicRouter.js","PrivateRouter.js","Styles/GlobalStyles.js","App.js","index.js"],"names":["initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","databaseURL","auth","getAuth","databaseInstance","getDatabase","storageInstance","getStorage","actionCodeSettings","url","handleCodeInApp","PROFILE_DEFAULT_IMG","DB_REF","ref","database","fetchData","table","a","lists","get","child","forEach","item","push","val","data","error","message","createUser","userId","username","email","set","profileImg","tweetId","alert","updateUserInfo","userinfo","displayName","photoURL","updates","uid","currentUser","update","success","fetchUserLikedTweet","userLikedTweets","likeTweets","updateUserTweetId","add","userTweetIdArray","length","pop","filter","id","updateUserLikesTweets","like","tweet","Error","fetchUserTweet","userTweetArray","userTweetIds","writtenPost","response","uploadTweet","text","hashtag","images","uuid","v4","likes","timestamp","Date","now","updateTweetLikes","count","removeTweet","NavContainer","styled","nav","Icon","i","NavUl","ul","NavList","li","Navlink","NavLink","Button","button","Navbar","className","to","name","onClick","event","signOut","then","window","location","replace","catch","HASHTAGS","Container","div","Span","span","CheckBoxContainer","CheckBox","props","selected","HashtagButton","tag","selectHashtag","hashDefault","useState","setSelected","useEffect","target","innerText","Hashtag","selectedHashtagArray","setHashtagsArray","setHashDefault","includes","temp","map","Storage","uploadImages","file","uploadBytesResumable","storageRef","res","downloadImagesUrl","getDownloadURL","TextArea","textarea","Label","label","AddButton","disabled","File","input","Tweet","tweetText","setTweetText","hashtags","setHashtags","selectedFiles","setSelectedFiles","displayFileNames","setdisplayFileNames","buttonAbled","setButtonAbled","onHandleClick","urls","download","maxLength","placeholder","onChange","value","htmlFor","type","accept","multiple","files","fileNames","trim","Loading","ListForm","ImageContainer","imageUrl","TextContainer","ProfileContainer","ProfileImgContainer","imgUrl","SocialBox","HashtagsContainer","Hashtags","LikesContainer","LikeButton","SearchBarContainer","SearchBarInput","SearchButton","SpanName","SpanEmail","notFoundUserInfo","SocialContainer","likesTweets","search","filterLists","tweetLike","setTweetLike","selectedHash","setSelectedHash","index","setSearchWord","onHandleClickHashtags","UserContainer","user","userInfo","setUserInfo","ListContainer","contents","img","SearchBar","searchWord","onKeyUp","key","TweetList","loading","setLoading","tweetList","setTweetList","unfilteredLists","setUnfilteredLists","searching","setSearching","socialLikeTweets","setSocialLikeTweets","reset","tweetRef","onValue","snapshot","Object","values","list","sort","list1","list2","listenTweetDB","finally","console","log","HomeContainer","ContentsContainer","HomePresenter","TweetCreator","Home","setUser","tempUser","localStorage","getItem","updateProfile","removeItem","code","ListsContainer","SpanContent","DeleteButton","MySweetList","userTweets","setUserTweets","setError","timeChanger","time","dateObj","getFullYear","getMonth","getDate","tweetid","MyProfileContainer","ProfileContentContainer","ContentsCotainer","ImgContainer","ProfileImg","ImgChangeButton","EditProfileForm","EditContainer","Input","notselected","SaveButton","SweetContainer","H2","h2","FormContainer","Form","form","InputSubmit","ConfirmSpan","color","MyProfilePresenter","userName","onHandleNameChange","onHandleClickSaveButton","onHandleChangeImg","successUpdate","setUserName","setProfileImg","selectedFile","setSelectedFile","setSuccessUpdate","updateUserProfile","newInfo","flag","objectURL","URL","createObjectURL","Text","Welcome","sign","SignInPresenter","userEmail","onHandleChange","onHandleSubmit","existingUser","setExisting","sendMail","onSubmit","required","autoFocus","onFocus","SignUpPresenter","existing","createUserAuth","callbackFn","sendSignInLinkToEmail","setItem","checkExistingUser","result","check","SignUpContainer","setUserEmail","setSendMail","preventDefault","SignInContainer","NotFound","login","isSignInWithEmailLink","href","tempEmail","signInWithEmailLink","PublicRouter","Component","component","rest","render","PrivateRouter","GlobalStyle","createGlobalStyle","App","setCurrentUser","onAuthStateChanged","path","exact","MyProfile","SignIn","SignUp","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.63778cd6.chunk.js","sourcesContent":["// Import the functions you need from the SDKs you need\nimport { initializeApp } from 'firebase/app';\nimport {\n  getAuth,\n  sendSignInLinkToEmail,\n  isSignInWithEmailLink,\n  signInWithEmailLink,\n  sendEmailVerification,\n  onAuthStateChanged,\n  signOut,\n  updateProfile,\n} from 'firebase/auth';\nimport {\n  getDatabase,\n  ref,\n  set,\n  get,\n  child,\n  update,\n  onValue,\n} from 'firebase/database';\nimport {\n  getStorage,\n  ref as storageRef,\n  getDownloadURL,\n  uploadBytesResumable,\n} from 'firebase/storage';\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyCGbMXMCJz_k1SLYeb2jkh1n8AR7KAhsoE',\n  authDomain: 'sweet-be7c5.firebaseapp.com',\n  projectId: 'sweet-be7c5',\n  storageBucket: 'sweet-be7c5.appspot.com',\n  messagingSenderId: '686933780116',\n  appId: '1:686933780116:web:f50dea304f43316b7a7681',\n  databaseURL:\n    'https://sweet-be7c5-default-rtdb.asia-southeast1.firebasedatabase.app/',\n};\n\ninitializeApp(firebaseConfig);\nconst auth = getAuth();\nconst databaseInstance = getDatabase();\nconst storageInstance = getStorage();\n\nconst actionCodeSettings = {\n  url: 'https://supinkim.github.io/sweet/',\n  handleCodeInApp: true,\n};\n\nexport {\n  auth,\n  sendSignInLinkToEmail,\n  actionCodeSettings,\n  isSignInWithEmailLink,\n  signInWithEmailLink,\n  sendEmailVerification,\n  onAuthStateChanged,\n  signOut,\n  updateProfile,\n  databaseInstance,\n  ref,\n  set,\n  get,\n  child,\n  update,\n  onValue,\n  storageInstance,\n  storageRef,\n  uploadBytesResumable,\n  getDownloadURL,\n};\n","import {\n  databaseInstance,\n  ref,\n  set,\n  child,\n  get,\n  auth,\n  update,\n} from '../Firebase/firebase';\nimport { v4 } from 'uuid';\n\nexport const PROFILE_DEFAULT_IMG =\n  'https://firebasestorage.googleapis.com/v0/b/sweet-be7c5.appspot.com/o/images%2Ftwitter_default.png?alt=media&token=d22275c7-6474-4fc9-9cee-98c1739dae00';\n\nconst DB_REF = ref(databaseInstance);\n\nconst database = {\n  fetchData: async function (table) {\n    /**\n     * @params {String} table : users, tweets\n     */\n    const lists = [];\n    try {\n      const userLists = await get(child(DB_REF, `${table}/`));\n      userLists.forEach((item) => {\n        lists.push(item.val());\n      });\n      return { data: lists, error: false };\n    } catch (error) {\n      return { data: null, error: true, message: error };\n    }\n  },\n  createUser: async function (userId, username, email) {\n    try {\n      await set(ref(databaseInstance, `users/user-${userId}`), {\n        userId,\n        username,\n        email,\n        profileImg: PROFILE_DEFAULT_IMG,\n        tweetId: ['none'],\n      });\n    } catch (error) {\n      alert(\n        '유저 정보를 저장하는 데 문제가 발생했습니다. 잠시 후 다시 시도해주세요.'\n      );\n    }\n  },\n  updateUserInfo: async function (userinfo) {\n    const { displayName, photoURL } = userinfo;\n    const updates = {};\n\n    try {\n      const {\n        currentUser: { uid },\n      } = auth;\n      if (displayName) {\n        updates[`users/user-${uid}/username`] = displayName;\n      }\n      if (photoURL) {\n        updates[`users/user-${uid}/profileImg`] = photoURL;\n      }\n\n      update(DB_REF, updates);\n      return { success: true };\n    } catch (error) {\n      alert(\n        '사용자 정보 업데이트에 문제가 발생했습니다. 잠시 후 다시 시도해주세요.'\n      );\n      return { success: false };\n    }\n  },\n  fetchUserLikedTweet: async function () {\n    const {\n      currentUser: { uid },\n    } = auth;\n\n    try {\n      const userLikedTweets = await (\n        await get(child(DB_REF, `users/user-${uid}/liketweets`))\n      ).val();\n\n      return {\n        success: true,\n        likeTweets: userLikedTweets ?? [],\n      };\n    } catch (error) {\n      return { success: false, likeTweets: null };\n    }\n  },\n  updateUserTweetId: async function (add, tweetId) {\n    /**\n     * @params {String} add : add ? update New PostId : remove existing PostId\n     * @params {String} tweetId : tweetId\n     */\n    const {\n      currentUser: { uid },\n    } = auth;\n\n    try {\n      const updates = {};\n      const userTweetIdArray =\n        (await (await get(child(DB_REF, `users/user-${uid}/tweetId`))).val()) ??\n        [];\n\n      if (userTweetIdArray?.length === 1 && userTweetIdArray[0] === 'none') {\n        userTweetIdArray.pop();\n      }\n\n      add\n        ? (updates[`/users/user-${uid}/tweetId`] = [\n            ...userTweetIdArray,\n            tweetId,\n          ])\n        : (updates[`/users/user-${uid}/tweetId`] = userTweetIdArray.filter(\n            (id) => id !== tweetId\n          ));\n\n      update(DB_REF, updates);\n      return { success: true };\n    } catch (error) {\n      alert(\n        '트윗을 업데이트 하는 데 문제가 발생했습니다.. 작성하신 트윗이 삭제됩니다..'\n      );\n      return { success: false };\n    }\n  },\n  updateUserLikesTweets: async function (tweetId, like) {\n    try {\n      const {\n        currentUser: { uid },\n      } = auth;\n\n      let { success, likeTweets } = await database.fetchUserLikedTweet();\n      if (success) {\n        const updates = {};\n        like\n          ? likeTweets.push(tweetId)\n          : (likeTweets = likeTweets.filter((tweet) => tweet !== tweetId));\n        updates[`/users/user-${uid}/liketweets`] = likeTweets;\n        update(DB_REF, updates);\n      } else {\n        throw new Error('좋아요 업데이트 실패');\n      }\n    } catch (error) {\n      alert(error.message);\n    }\n  },\n  fetchUserTweet: async function () {\n    const userTweetArray = [];\n    const {\n      currentUser: { uid },\n    } = auth;\n\n    try {\n      const userTweetIds =\n        (await get(child(DB_REF, `users/user-${uid}/tweetId`)).val()) ?? [];\n\n      for (let id of userTweetIds) {\n        const writtenPost = await (\n          await get(child(DB_REF, `tweets/tweet-${id}`))\n        ).val();\n        userTweetArray.push(writtenPost);\n      }\n\n      return { success: true, response: userTweetArray };\n    } catch (error) {\n      alert(error);\n      return { success: false, error: error.message };\n    }\n  },\n  uploadTweet: async function (text, hashtag, images) {\n    const uuid = v4();\n    const {\n      currentUser: { uid },\n    } = auth;\n\n    try {\n      await set(ref(databaseInstance, `tweets/tweet-${uuid}`), {\n        text,\n        hashtag,\n        images,\n        likes: 0,\n        userId: uid,\n        timestamp: Date.now(),\n        tweetId: uuid,\n      });\n      return { success: true, tweetId: uuid };\n    } catch (error) {\n      alert(\n        '트윗을 생성하는 데 문제가 발생했습니다. 잠시 후 다시 시도해주세요.'\n      );\n      return { success: false, message: error };\n    }\n  },\n  updateTweetLikes: async function (tweetId, like) {\n    try {\n      const count = await (\n        await get(child(DB_REF, `tweets/tweet-${tweetId}/likes`))\n      ).val();\n      const updates = {};\n      updates[`tweets/tweet-${tweetId}/likes`] = like ? count + 1 : count - 1;\n      update(DB_REF, updates);\n    } catch (error) {\n      alert(error.message);\n    }\n  },\n  removeTweet: async function (tweetId) {\n    try {\n      await set(ref(databaseInstance, `tweets/tweet-${tweetId}`), null);\n    } catch (error) {\n      alert('트윗 삭제가 완료되지 않았습니다.');\n    }\n  },\n};\n\nexport default database;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nconst NavContainer = styled.nav`\n  width: 100%;\n  height: 60px;\n  min-height: 60px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border-bottom: 1px solid #eceff1;\n  padding: 10px 0px;\n  @media (max-width: 870px) {\n    width: 100px;\n    height: 100vh;\n    flex-direction: column;\n    align-items: center;\n    row-gap: 10px;\n    border-right: 1px solid #eceff1;\n    border-bottom: none;\n  }\n`;\n\nconst Icon = styled.i`\n  color: #c62828;\n  margin-left: 40px;\n  @media (max-width: 870px) {\n    margin-left: 10px;\n    margin-top: 4px;\n  }\n`;\n\nconst NavUl = styled.ul`\n  width: 30%;\n  height: 100%;\n  list-style-type: none;\n  display: grid;\n  grid-template-columns: 0.4fr 0.8fr 0.5fr;\n  align-items: center;\n  @media (max-width: 870px) {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    row-gap: 24px;\n  }\n`;\n\nconst NavList = styled.li`\n  text-align: center;\n  width: 100px;\n  height: 40px;\n  line-height: 42px;\n`;\n\nconst Navlink = styled(NavLink)`\n  text-decoration: none;\n  color: black;\n  &:hover {\n    color: #c62828;\n  }\n`;\n\nconst Button = styled.button`\n  all: unset;\n  cursor: pointer;\n  width: 90px;\n  height: 30px;\n  line-height: 32px;\n  text-align: center;\n  border: 1px solid #c62828;\n  border-radius: 20px;\n  background-color: #c62828;\n  color: #fff;\n  &:hover {\n    transform: scale(0.98);\n  }\n`;\n\nexport { Button, NavContainer, Navlink, NavList, NavUl, Icon };\n","import React from 'react';\nimport { auth, signOut } from './Firebase/firebase';\nimport {\n  NavContainer,\n  NavUl,\n  NavList,\n  Navlink,\n  Button,\n  Icon,\n} from './Styles/NavbarStyles';\n\nconst Navbar = () => {\n  const onHandleClick = (event) => {\n    signOut(auth)\n      .then(() => {\n        // Sign-out successful.\n        window.location.replace('/sweet');\n      })\n      .catch((error) => {\n        alert(\n          '예기치 못한 문제가 발생해 로그아웃에 실패했습니다. 잠시 후 다시 시도하거나 페이지 새로고침을 해주세요.'\n        );\n      });\n  };\n  return (\n    <NavContainer>\n      <Icon className='fab fa-twitter fa-3x' />\n      <NavUl>\n        <NavList>\n          <Navlink to='/'>Home</Navlink>\n        </NavList>\n        <NavList>\n          <Navlink to='/myprofile'>My Profile</Navlink>\n        </NavList>\n        <NavList>\n          <Button name='logout_button' onClick={onHandleClick}>\n            로그아웃\n          </Button>\n        </NavList>\n      </NavUl>\n    </NavContainer>\n  );\n};\n\nexport default Navbar;\n","import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\n\nconst HASHTAGS = [\n  ['일상', 100],\n  ['반려동물', 101],\n  ['최애', 102],\n  ['음식', 103],\n  ['데이트', 104],\n  ['운동', 105],\n  ['여행', 106],\n  ['움짤', 107],\n  ['친구', 108],\n  ['IT', 109],\n];\n\nconst Container = styled.div`\n  width: 100%;\n  height: 60px;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  row-gap: 10px;\n  margin-bottom: 10px;\n`;\n\nconst Span = styled.span`\n  width: 90%;\n  height: 20px;\n  line-height: 20px;\n`;\n\nconst CheckBoxContainer = styled.div`\n  width: 90%;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  column-gap: 4px;\n  row-gap: 8px;\n  flex-wrap: wrap;\n`;\n\nconst CheckBox = styled.div`\n  width: 60px;\n  height: 20px;\n  line-height: 20px;\n  background-color: ${(props) => (props.selected ? '#c62828' : '#fff')};\n  color: ${(props) => (props.selected ? '#fff' : '#c62828')};\n  font-size: 12px;\n  border: 1px solid #c62828;\n  border-radius: 10px;\n  text-align: center;\n  cursor: pointer;\n`;\n\nconst HashtagButton = ({ tag, selectHashtag, hashDefault }) => {\n  const [selected, setSelected] = useState(false);\n\n  useEffect(() => {\n    setSelected(false);\n  }, [hashDefault]);\n\n  const onHandleClick = (event) => {\n    setSelected(!selected);\n    selectHashtag(event.target.innerText);\n  };\n\n  return (\n    <CheckBox name='hashtag' selected={selected} onClick={onHandleClick}>\n      {tag}\n    </CheckBox>\n  );\n};\n\nconst Hashtag = ({\n  selectedHashtagArray,\n  setHashtagsArray,\n  hashDefault,\n  setHashDefault,\n}) => {\n  useEffect(() => {\n    if (hashDefault) {\n      setHashDefault(false);\n    }\n  }, [hashDefault]);\n\n  const selectHashtag = (now) => {\n    if (selectedHashtagArray.includes(now)) {\n      const temp = selectedHashtagArray.filter((tag) => tag !== now);\n      setHashtagsArray(temp);\n    } else {\n      setHashtagsArray([...selectedHashtagArray, now]);\n    }\n  };\n\n  return (\n    <Container>\n      <Span>#Select HashTag!</Span>\n      <CheckBoxContainer>\n        {HASHTAGS.map(([tag, id]) => (\n          <HashtagButton\n            key={id}\n            tag={tag}\n            selectHashtag={selectHashtag}\n            hashDefault={hashDefault}\n          />\n        ))}\n      </CheckBoxContainer>\n    </Container>\n  );\n};\n\nexport default Hashtag;\n","import {\n  storageInstance,\n  storageRef,\n  uploadBytesResumable,\n  getDownloadURL,\n} from '../Firebase/firebase';\n\nconst Storage = {\n  uploadImages: function (file) {\n    const result = uploadBytesResumable(\n      storageRef(storageInstance, `images/${file.name}`),\n      file\n    )\n      .then((res) => {\n        return { response: res, success: true };\n      })\n      .catch((error) => {\n        return {\n          response: error,\n          success: false,\n          message: '이미지 업로드 실패',\n        };\n      });\n    return result;\n  },\n  downloadImagesUrl: function (file) {\n    const result = getDownloadURL(\n      storageRef(storageInstance, `images/${file.name}`)\n    )\n      .then((url) => {\n        return { response: url, success: true };\n      })\n      .catch((error) => {\n        return {\n          response: error,\n          success: false,\n          message: '이미지 URL 다운로드 실패',\n        };\n      });\n    return result;\n  },\n};\n\nexport default Storage;\n","import styled from 'styled-components';\n\nconst Container = styled.div`\n  width: 500px;\n  height: 400px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n  align-items: center;\n  box-shadow: 1px 1px 2px 2px rgba(0, 0, 0, 0.08);\n  border-radius: 4px;\n  row-gap: 10px;\n`;\n\nconst TextArea = styled.textarea`\n  width: 450px;\n  height: 100px;\n  resize: none;\n  outline: none;\n  border: 1px solid #c62828;\n  border-radius: 4px;\n  padding: 4px;\n`;\n\nconst Label = styled.label`\n  width: 450px;\n  height: 30px;\n  line-height: 30px;\n  border: 1px solid #ced6e0;\n  color: #8395a7;\n  font-size: 12px;\n  padding-left: 10px;\n  cursor: pointer;\n`;\n\nconst AddButton = styled.button`\n  all: unset;\n  width: 150px;\n  height: 30px;\n  line-height: 200%;\n  color: #fff;\n  background-color: ${(props) => (props.disabled ? '#a5b1c2' : '#e57373')};\n  text-align: center;\n  border-radius: 20px;\n  cursor: pointer;\n`;\n\nconst File = styled.input`\n  display: none;\n`;\n\nexport { File, AddButton, Label, TextArea, Container };\n","import React, { useEffect, useState } from 'react';\nimport Hashtag from './Hashtag';\nimport Storage from '../API/Storage';\nimport {\n  Container,\n  TextArea,\n  Label,\n  File,\n  AddButton,\n} from '../Styles/TweetStyles';\nimport database from '../API/Database';\n\nconst Tweet = () => {\n  const [tweetText, setTweetText] = useState('');\n  const [hashtags, setHashtags] = useState([]);\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [displayFileNames, setdisplayFileNames] = useState('파일 선택');\n  const [buttonAbled, setButtonAbled] = useState(false);\n  const [hashDefault, setHashDefault] = useState(false);\n\n  useEffect(() => {\n    tweetText ? setButtonAbled(true) : setButtonAbled(false);\n  }, [tweetText]);\n\n  const setDefaultTweetContainer = () => {\n    setTweetText('');\n    setHashtags([]);\n    setSelectedFiles([]);\n    setdisplayFileNames('파일선택');\n    setHashDefault(true);\n  };\n\n  const onHandleClick = async () => {\n    const urls = [];\n    for (let file of selectedFiles) {\n      try {\n        const { success, message } = await Storage.uploadImages(file);\n        if (success) {\n          const { success: download, response } =\n            await Storage.downloadImagesUrl(file);\n          if (download) {\n            urls.push(response);\n          } else {\n            throw new Error(response);\n          }\n        } else {\n          throw new Error(message);\n        }\n      } catch (error) {\n        alert(error);\n      }\n    }\n\n    const { success, tweetId } = await database.uploadTweet(\n      tweetText,\n      hashtags,\n      urls\n    );\n    if (success) {\n      const { success: updateSuccess } = await database.updateUserTweetId(\n        true,\n        tweetId\n      );\n\n      if (!updateSuccess) {\n        database.removeTweet(tweetId);\n      }\n    }\n    setDefaultTweetContainer();\n  };\n\n  const onHandleChange = (event) => {\n    setTweetText(event.target.value);\n  };\n\n  const onHandleUpload = (event) => {\n    const { files } = event.target;\n    let fileNames = '';\n    const temp = [];\n\n    for (let i = 0; i < files.length; i++) {\n      fileNames += `${files[i].name}, `;\n      temp.push(files[i]);\n    }\n\n    setdisplayFileNames(fileNames.trim() || '선택 파일 없음');\n    setSelectedFiles(temp);\n  };\n\n  return (\n    <Container>\n      <TextArea\n        name='tweet_container'\n        maxLength='200'\n        placeholder='나만의 스윗을 날려보세요!'\n        onChange={onHandleChange}\n        value={tweetText}\n      ></TextArea>\n      <Hashtag\n        selectedHashtagArray={hashtags}\n        setHashtagsArray={setHashtags}\n        hashDefault={hashDefault}\n        setHashDefault={setHashDefault}\n      />\n      <Label htmlFor='file_upload'>{displayFileNames}</Label>\n      <File\n        id='file_upload'\n        type='file'\n        accept='image/*'\n        multiple\n        onChange={onHandleUpload}\n      />\n      <AddButton onClick={onHandleClick} disabled={buttonAbled ? '' : true}>\n        add\n      </AddButton>\n    </Container>\n  );\n};\n\nexport default Tweet;\n","import React from 'react';\nimport styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: rgba(0, 0, 0, 0, 8);\n`;\n\nexport const Span = styled.span`\n  color: #e57373;\n  font-size: 30px;\n  font-weight: 500;\n  margin-top: 100px;\n`;\n\nconst Loading = () => {\n  return (\n    <Container>\n      <Span> Loading... </Span>\n    </Container>\n  );\n};\n\nexport default Loading;\n","import styled from 'styled-components';\n\nconst Container = styled.div`\n  width: 630px;\n  height: 90vh;\n  overflow: auto;\n  background-color: #f5f6fa;\n  box-shadow: 1px 1px 2px 2px rgba(0, 0, 0, 0.08);\n  border-radius: 4px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  row-gap: 10px;\n  padding: 10px 0px;\n  ::-webkit-scrollbar {\n    display: none;\n  }\n  @media (max-width: 870px) {\n    width: 500px;\n    height: 90vh;\n  }\n`;\n\nconst ListForm = styled.div`\n  width: 90%;\n  max-height: 600px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  box-shadow: 1px 1px 1px rgba(0, 0, 0, 0.1);\n  background-color: #fff;\n  border-radius: 10px;\n`;\n\nconst ImageContainer = styled.div`\n  width: 85%;\n  height: 250px;\n  background-image: url(${(props) => props.imageUrl});\n  background-size: cover;\n  background-position: center center;\n  background-repeat: no-repeat;\n  margin-bottom: 10px;\n  border-radius: 4px;\n`;\n\nconst TextContainer = styled.div`\n  width: 85%;\n  height: fit-content;\n  max-height: 150px;\n  text-align: center;\n  padding: 6px;\n  margin: 5px 0px;\n  font-size: 15px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: -webkit-box;\n  -webkit-line-clamp: 6;\n  -webkit-box-orient: vertical;\n`;\n\nconst ProfileContainer = styled.div`\n  width: 100%;\n  height: 64px;\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  column-gap: 10px;\n  padding: 4px 0px;\n  padding-left: 10px;\n  border-bottom: 1px solid #eeeeee;\n`;\n\nconst ProfileImgContainer = styled.div`\n  width: 50px;\n  height: 50px;\n  border-radius: 50%;\n  background-image: url(${(props) => props.imgUrl});\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: cover;\n  border: 1px solid #ef9a9a;\n`;\n\nconst SocialBox = styled.div`\n  width: 100%;\n  height: 30px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0px 40px 10px 40px;\n`;\n\nconst HashtagsContainer = styled.div`\n  width: 80%;\n  height: 30px;\n  display: flex;\n  align-items: center;\n  column-gap: 4px;\n`;\n\nconst Hashtags = styled.div`\n  width: 54px;\n  height: 20px;\n  line-height: 200%;\n  font-size: 11px;\n  border-radius: 10px;\n  text-align: center;\n  cursor: pointer;\n  background-color: #ef9a9a;\n  color: #fff;\n`;\n\nconst LikesContainer = styled.div`\n  width: 20%;\n  height: 30px;\n  line-height: 200%;\n  display: felx;\n  color: #616161;\n  justify-content: flex-end;\n  align-items: center;\n`;\n\nconst LikeButton = styled.button`\n  all: unset;\n  cursor: pointer;\n  width: 30px;\n  height: 30px;\n  color: #c62828;\n`;\n\nconst SearchBarContainer = styled.div`\n  width: 90%;\n  height: 35px;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  background-color: #fff;\n  border: none;\n  border-radius: 20px;\n  cursor: pointer;\n  box-shadow: 1px 1px 1px rgba(0, 0, 0, 0.1);\n`;\n\nconst SearchBarInput = styled.input`\n  width: 85%;\n  height: 30px;\n  line-height: 30px;\n  background-color: #fff;\n  border: none;\n  outline: none;\n`;\n\nconst SearchButton = styled.button`\n  all: unset;\n  width: 30px;\n  height: 30px;\n  cursor: pointer;\n  color: #999;\n`;\n\nconst SpanName = styled.span`\n  font-size: 14px;\n`;\n\nconst SpanEmail = styled.span`\n  font-size: 11px;\n  color: #8395a7;\n`;\n\nexport {\n  ProfileContainer,\n  ProfileImgContainer,\n  TextContainer,\n  ListForm,\n  Container,\n  ImageContainer,\n  LikeButton,\n  SocialBox,\n  Hashtags,\n  HashtagsContainer,\n  LikesContainer,\n  SearchBarInput,\n  SearchButton,\n  SearchBarContainer,\n  SpanName,\n  SpanEmail,\n};\n","import React, { useEffect, useState } from 'react';\nimport database, { PROFILE_DEFAULT_IMG } from '../API/Database';\nimport Loading from '../Pages/Loading';\nimport {\n  databaseInstance,\n  ref,\n  get,\n  child,\n  onValue,\n} from '../Firebase/firebase';\n\nimport {\n  ProfileContainer,\n  ProfileImgContainer,\n  TextContainer,\n  ListForm,\n  Container,\n  ImageContainer,\n  LikeButton,\n  Hashtags,\n  HashtagsContainer,\n  SocialBox,\n  LikesContainer,\n  SearchBarInput,\n  SearchButton,\n  SearchBarContainer,\n  SpanEmail,\n  SpanName,\n} from '../Styles/TweetListStyles';\n\nconst notFoundUserInfo = { username: '익명', profileImg: PROFILE_DEFAULT_IMG };\n\nconst SocialContainer = ({\n  hashtag,\n  likes,\n  timestamp,\n  tweetId,\n  likesTweets,\n  search,\n  filterLists,\n}) => {\n  const [tweetLike, setTweetLike] = useState(likes);\n  const [selected, setSelected] = useState(false);\n  const [selectedHash, setSelectedHash] = useState(false);\n\n  useEffect(() => {\n    if (likesTweets && likesTweets.includes(tweetId)) {\n      setSelected(true);\n    }\n  }, []);\n\n  useEffect(() => {\n    filterLists();\n  }, [selectedHash]);\n\n  const onHandleClickLikeButton = (event) => {\n    const { updateUserLikesTweets, updateTweetLikes } = database;\n    setSelected(!selected);\n    updateUserLikesTweets(tweetId, !selected);\n    updateTweetLikes(tweetId, !selected);\n    selected ? setTweetLike(tweetLike - 1) : setTweetLike(tweetLike + 1);\n  };\n\n  const onHandleClickHashtags = (event, tag) => {\n    search.setSearchWord(tag);\n    setSelectedHash(!selectedHash);\n  };\n\n  return (\n    <SocialBox>\n      <HashtagsContainer>\n        {hashtag?.length &&\n          hashtag.map((tag, index) => (\n            <Hashtags\n              key={`${timestamp}_${index}_hashtag`}\n              onClick={(event) => onHandleClickHashtags(event, tag)}\n            >\n              #{tag}\n            </Hashtags>\n          ))}\n      </HashtagsContainer>\n      <LikesContainer>\n        <LikeButton onClick={onHandleClickLikeButton}>\n          {selected ? (\n            <i className='fas fa-heart'></i>\n          ) : (\n            <i className='far fa-heart'></i>\n          )}\n        </LikeButton>\n        <SpanName>{tweetLike}</SpanName>\n      </LikesContainer>\n    </SocialBox>\n  );\n};\n\nconst UserContainer = ({ user }) => {\n  const [userInfo, setUserInfo] = useState('');\n\n  useEffect(() => {\n    get(child(ref(databaseInstance), `users/user-${user}`))\n      .then((response) => {\n        setUserInfo(response.val());\n      })\n      .catch((error) => setUserInfo(notFoundUserInfo));\n\n    return () => setUserInfo(null);\n  }, []);\n\n  return (\n    userInfo && (\n      <ProfileContainer>\n        <ProfileImgContainer imgUrl={userInfo.profileImg} />\n        <SpanName>{userInfo.username}</SpanName>\n        <SpanEmail>({userInfo?.email})</SpanEmail>\n      </ProfileContainer>\n    )\n  );\n};\n\nconst ListContainer = ({ contents, likesTweets, search, filterLists }) => {\n  const { hashtag, images, likes, text, userId, timestamp, tweetId } = contents;\n\n  return (\n    <ListForm>\n      <UserContainer user={userId} />\n      <TextContainer name='tweet_contents'>{text}</TextContainer>\n      {images?.length &&\n        images.map((img, index) => (\n          <ImageContainer imageUrl={img} key={`${timestamp}_${index}_image`} />\n        ))}\n      <SocialContainer\n        hashtag={hashtag}\n        likes={likes}\n        timestamp={timestamp}\n        tweetId={tweetId}\n        likesTweets={likesTweets}\n        search={search}\n        filterLists={filterLists}\n      />\n    </ListForm>\n  );\n};\n\nconst SearchBar = ({ search, filterLists }) => {\n  const onHandleClick = (event) => {\n    filterLists();\n  };\n\n  const onHandleChange = (event) => {\n    search.setSearchWord(event.target.value);\n  };\n\n  const onHandleKeyUp = (event) => {\n    if (event.key === 'Enter') {\n      filterLists();\n    }\n  };\n\n  return (\n    <SearchBarContainer>\n      <SearchBarInput\n        name='search_container'\n        placeholder='내용 또는 해시태그로 검색하기'\n        value={search.searchWord}\n        onChange={onHandleChange}\n        onKeyUp={onHandleKeyUp}\n      />\n      <SearchButton onClick={onHandleClick}>\n        <i className='fas fa-search' />\n      </SearchButton>\n    </SearchBarContainer>\n  );\n};\n\nconst TweetList = () => {\n  const [loading, setLoading] = useState(true);\n  const [tweetList, setTweetList] = useState([]);\n  const [searchWord, setSearchWord] = useState('');\n  const [unfilteredLists, setUnfilteredLists] = useState('');\n  const [searching, setSearching] = useState(false);\n\n  /* 로그인한 유저가 '좋아요'를 누른 트윗 목록 */\n  const [socialLikeTweets, setSocialLikeTweets] = useState([]);\n\n  const listenTweetDB = () => {\n    const tweetRef = ref(databaseInstance, 'tweets/');\n    onValue(tweetRef, (snapshot) => {\n      if (snapshot.val()) {\n        const now = Object.values(snapshot.val());\n        const temp = [];\n        now.forEach((list) => {\n          temp.push(list);\n        });\n        temp.sort((list1, list2) => list2.timestamp - list1.timestamp);\n        if (searching) {\n          setTweetList(temp);\n          setSearchWord('');\n        }\n        setUnfilteredLists(temp);\n      }\n    });\n  };\n\n  const filterLists = (reset = false) => {\n    if (reset) {\n      setTweetList(unfilteredLists);\n      setSearching(false);\n    } else {\n      const temp = [];\n      for (let i = 0; i < unfilteredLists.length; i++) {\n        const { text, hashtag } = unfilteredLists[i];\n        if (\n          text.includes(searchWord) ||\n          (hashtag && hashtag.includes(searchWord))\n        ) {\n          temp.push(unfilteredLists[i]);\n        }\n      }\n      setTweetList(temp);\n      setSearching(true);\n    }\n  };\n\n  useEffect(() => {\n    if (!searchWord && searching) {\n      filterLists(true);\n    }\n  }, [searching]);\n\n  useEffect(() => {\n    listenTweetDB();\n    setUnfilteredLists(tweetList);\n  }, [loading]);\n\n  useEffect(() => {\n    if (!searching) {\n      setTweetList(unfilteredLists);\n    }\n  }, [unfilteredLists]);\n\n  useEffect(() => {\n    const { fetchData, fetchUserLikedTweet } = database;\n    fetchData('tweets')\n      .then((response) => {\n        response.data.sort((list1, list2) => list2.timestamp - list1.timestamp);\n        setTweetList(response.data);\n        fetchUserLikedTweet()\n          .then(({ success, likeTweets }) => {\n            if (success) {\n              setSocialLikeTweets(likeTweets);\n            }\n          })\n          .finally(() => {\n            setLoading(false);\n          });\n      })\n      .catch((error) => console.log(error));\n\n    return () => {\n      setSearchWord('');\n      setLoading(true);\n    };\n  }, []);\n\n  return (\n    <Container>\n      {loading ? (\n        <Loading />\n      ) : (\n        <>\n          <SearchBar\n            search={{ searchWord, setSearchWord }}\n            filterLists={filterLists}\n          />\n          {tweetList.length ? (\n            tweetList.map((list) => (\n              <ListContainer\n                key={list.timestamp}\n                contents={list}\n                likesTweets={socialLikeTweets}\n                search={{ searchWord, setSearchWord }}\n                filterLists={filterLists}\n              />\n            ))\n          ) : (\n            <div>작성된 sweet이 없습니다 😢</div>\n          )}\n        </>\n      )}\n    </Container>\n  );\n};\n\nexport default TweetList;\n","import React from 'react';\nimport styled from 'styled-components';\nimport Navbar from '../Navbar';\nimport TweetCreator from './TweetCreator';\nimport TweetList from './TweetList';\n\nexport const HomeContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  row-gap: 20px;\n  align-items: center;\n  @media (max-width: 870px) {\n    height: 100vh;\n    flex-direction: row;\n    align-items: center;\n    row-gap: 10px;\n  }\n`;\n\nexport const ContentsContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  column-gap: 40px;\n  overflow: auto;\n  ::-webkit-scrollbar {\n    display: none;\n  }\n  @media (max-width: 870px) {\n    height: 100vh;\n    flex-direction: column;\n    align-items: center;\n    row-gap: 10px;\n  }\n`;\n\nconst HomePresenter = () => {\n  return (\n    <HomeContainer>\n      <Navbar />\n      <ContentsContainer>\n        <TweetCreator />\n        <TweetList />\n      </ContentsContainer>\n    </HomeContainer>\n  );\n};\n\nexport default HomePresenter;\n","import React, { useEffect, useState } from 'react';\nimport database, { PROFILE_DEFAULT_IMG } from '../API/Database';\nimport { auth, updateProfile } from '../Firebase/firebase';\nimport HomePresenter from './HomePresenter';\n\nconst Home = () => {\n  const [user, setUser] = useState('');\n\n  useEffect(() => {\n    const tempUser = localStorage.getItem('userNameForSignUp');\n    if (auth.currentUser && tempUser) {\n      setUser(auth.currentUser);\n      updateProfile(auth.currentUser, {\n        displayName: tempUser,\n        photoURL: PROFILE_DEFAULT_IMG,\n      })\n        .then(() => {\n          const { uid, email, displayName } = auth.currentUser;\n          database.createUser(uid, displayName, email);\n        })\n        .then(() => {\n          localStorage.removeItem('userNameForSignUp');\n        })\n        .catch((error) => {\n          if (error.code !== 'auth/network-request-failed') {\n            alert(\n              '새 사용자 정보를 업데이트 하지 못했습니다. My Profile에서 사용자 이름을 업데이트 해주세요.'\n            );\n          }\n        });\n    }\n  }, []);\n\n  return <HomePresenter />;\n};\n\nexport default Home;\n","import React, { useEffect, useState } from 'react';\nimport database from '../API/Database';\nimport Loading from '../Pages/Loading';\nimport styled from 'styled-components';\n\nconst ListsContainer = styled.div`\n  width: 90%;\n  height: 400px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  border-top: 1px solid #eeeeee;\n  padding: 10px;\n  row-gap: 10px;\n`;\n\nconst ListContainer = styled.div`\n  width: 70%;\n  height: 100px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  border: 1px solid #eeeeee;\n  padding: 10px;\n  row-gap: 10px;\n  @media (max-width: 870px) {\n    height: 160px;\n  }\n`;\n\nconst Span = styled.span`\n  font-size: 14px;\n  color: #757575;\n`;\n\nconst SpanContent = styled.span`\n  font-weight: 400;\n`;\n\nconst DeleteButton = styled.div`\n  all: unset;\n  width: 60px;\n  height: 20px;\n  border: 1px solid #c62828;\n  cursor: pointer;\n  text-align: center;\n  line-height: 23px;\n  font-size: 12px;\n  &:hover {\n    color: #fff;\n    background-color: #c62828;\n  }\n`;\n\nconst MySweetList = () => {\n  const [userTweets, setUserTweets] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    database\n      .fetchUserTweet()\n      .then(({ success, response, error: e }) => {\n        success ? setUserTweets(response) : setError(true);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, []);\n\n  const timeChanger = (time) => {\n    const dateObj = new Date(time);\n    let dateStr = `${dateObj.getFullYear()}년 ${\n      dateObj.getMonth() + 1\n    }월 ${dateObj.getDate()}일 작성`;\n\n    return dateStr;\n  };\n\n  const onHandleClick = async (event, tweetid) => {\n    const { removeTweet, updateUserTweetId, fetchUserTweet } = database;\n    await removeTweet(tweetid);\n    await updateUserTweetId(false, tweetid);\n    const { success, response } = await fetchUserTweet();\n    if (success) {\n      setUserTweets(response);\n    }\n  };\n\n  console.log(userTweets);\n\n  return loading ? (\n    <Loading />\n  ) : (\n    <ListsContainer>\n      {error ? (\n        <div>\n          사용자 작성 트윗을 불러오는 데 문제가 발생했습니다. 잠시 후 새로고침\n          해주세요.\n        </div>\n      ) : userTweets?.length && userTweets[0] !== 'none' ? (\n        userTweets.map(({ timestamp, text, tweetId }) => (\n          <ListContainer key={tweetId}>\n            <Span name='written_time'>{timeChanger(timestamp)}</Span>\n            <SpanContent name='contents'>{text}</SpanContent>\n            <DeleteButton\n              name='delete_button'\n              onClick={(event) => onHandleClick(event, tweetId)}\n            >\n              삭제\n            </DeleteButton>\n          </ListContainer>\n        ))\n      ) : (\n        <div>아직 작성된 sweet이 없습니다.</div>\n      )}\n    </ListsContainer>\n  );\n};\n\nexport default MySweetList;\n","import styled from 'styled-components';\nimport { ContentsContainer, HomeContainer } from '../Home/HomePresenter';\n\nconst MyProfileContainer = styled(HomeContainer)`\n  ::-webkit-scrollbar {\n    display: none;\n  }\n  @media (max-width: 870px) {\n    justify-content: center;\n    align-items: center;\n  }\n`;\n\nconst ProfileContentContainer = styled(ContentsContainer)`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  column-gap: 40px;\n  ::-webkit-scrollbar {\n    display: none;\n  }\n  @media (max-width: 870px) {\n    flex-direction: column;\n    row-gap: 10px;\n    margin-top: 50px;\n  }\n`;\n\nconst ContentsCotainer = styled.div`\n  width: 90%;\n  height: 350px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 10px;\n  box-shadow: 1px 1px 2px 2px rgba(0, 0, 0, 0.08);\n  margin-top: 10px;\n  @media (max-width: 870px) {\n    width: 80%;\n    height: 700px;\n    padding: 10px 0px;\n    flex-direction: column;\n    align-items: center;\n    row-gap: 10px;\n    margin-top: 260px;\n  }\n`;\n\nconst ImgContainer = styled.div`\n  width: 50%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  @media (max-width: 870px) {\n    margin-top: 60px;\n    height: 50%;\n  }\n`;\n\nconst ProfileImg = styled.div`\n  width: 200px;\n  height: 200px;\n  border-radius: 50%;\n  background-image: url(${(props) => props.imgUrl});\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: cover;\n  border: 1px solid #e0e0e0;\n`;\n\nconst ImgChangeButton = styled.label`\n  all: unset;\n  width: 30px;\n  height: 30px;\n  line-height: 33px;\n  border-radius: 50%;\n  border: 3px solid #e57373;\n  background-color: #e57373;\n  cursor: pointer;\n  text-align: center;\n  transform: translate(70px, -40px);\n  color: #fff;\n`;\n\nconst EditProfileForm = styled.div`\n  width: 85%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  row-gap: 20px;\n  @media (max-width: 870px) {\n    height: 40%;\n  }\n`;\n\nconst EditContainer = styled.div`\n  width: 100%;\n  height: 100px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Label = styled.label`\n  width: 80%;\n  height: 40px;\n  line-height: 40px;\n  font-weight: 500;\n  font-size: 13px;\n`;\n\nconst Input = styled.input`\n  all: unset;\n  outline: none;\n  border: 1px solid #e0e0e0;\n  width: 80%;\n  height: 30px;\n  line-height: 30px;\n  padding-left: 10px;\n  background-color: ${(props) => (props.notselected ? '#e0e0e0' : '#fff')};\n  color: ${(props) => (props.notselected ? '#999' : '#333')};\n`;\n\nconst SaveButton = styled.button`\n  all: unset;\n  width: 100px;\n  height: 30px;\n  line-height: 32px;\n  cursor: pointer;\n  background-color: #e57373;\n  color: #fff;\n  font-weight: 400;\n  border-radius: 4px;\n  text-align: center;\n  align-self: flex-end;\n  margin-right: 90px;\n  @media (max-width: 870px) {\n    align-self: center;\n    margin-right: 0px;\n  }\n`;\n\nconst SweetContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n`;\n\nconst H2 = styled.h2`\n  margin-top: 20px;\n  margin-bottom: 20px;\n  height: 20px;\n`;\n\nexport {\n  MyProfileContainer,\n  ProfileContentContainer,\n  SaveButton,\n  Input,\n  Label,\n  ImgChangeButton,\n  ImgContainer,\n  EditContainer,\n  EditProfileForm,\n  ContentsCotainer,\n  ProfileImg,\n  SweetContainer,\n  H2,\n};\n","import styled from 'styled-components';\n\nconst FormContainer = styled.div`\n  width: 500px;\n  height: 600px;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  box-shadow: 1px 1px 2px 2px rgba(0, 0, 0, 0.08);\n  border-radius: 4px;\n`;\n\nconst Form = styled.form`\n  width: 100%;\n  height: 100px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  row-gap: 16px;\n  align-items: center;\n  margin-top: 60px;\n`;\n\nconst Label = styled.label`\n  font-size: 14px;\n  font-weight: 400;\n`;\n\nconst Input = styled.input`\n  width: 250px;\n  height: 40px;\n  line-height: 40px;\n  border: none;\n  border-bottom: 1px solid #666;\n  outline: none;\n`;\n\nconst InputSubmit = styled.input`\n  all: unset;\n  width: 250px;\n  height: 30px;\n  line-height: 200%;\n  color: #fff;\n  background-color: #e57373;\n  text-align: center;\n  border-radius: 4px;\n  cursor: pointer;\n`;\n\nconst Button = styled.button`\n  all: unset;\n  cursor: pointer;\n  width: 60px;\n  height: 20px;\n  line-height: 20px;\n  text-align: center;\n  border-bottom: 2px solid #e57373;\n`;\n\nconst Span = styled.span`\n  width: 100%;\n  font-size: 14px;\n  font-weight: 200;\n  color: #666;\n  text-align: center;\n  margin: 100px 0px 10px 0px;\n`;\n\nconst ConfirmSpan = styled.span`\n  color: ${(props) => (props.color ? props.color : '#666')};\n`;\n\nexport {\n  ConfirmSpan,\n  Span,\n  Button,\n  InputSubmit,\n  Input,\n  Label,\n  Form,\n  FormContainer,\n};\n","import React from 'react';\nimport Navbar from '../Navbar';\nimport MySweetList from './MySweetList';\nimport {\n  MyProfileContainer,\n  SaveButton,\n  Input,\n  Label,\n  ImgChangeButton,\n  ImgContainer,\n  EditContainer,\n  EditProfileForm,\n  ContentsCotainer,\n  ProfileImg,\n  SweetContainer,\n  ProfileContentContainer,\n  H2,\n} from '../Styles/ProfileStyles';\nimport { File } from '../Styles/TweetStyles';\nimport { ConfirmSpan } from '../Styles/SignStyles';\n\nconst MyProfilePresenter = ({\n  email,\n  userName,\n  profileImg,\n  onHandleNameChange,\n  onHandleClickSaveButton,\n  onHandleChangeImg,\n  successUpdate,\n}) => {\n  return (\n    <MyProfileContainer>\n      <Navbar />\n      <ProfileContentContainer>\n        <ContentsCotainer>\n          <ImgContainer name='image_container'>\n            <ProfileImg name='image' imgUrl={profileImg} />\n            <ImgChangeButton htmlFor='profile_img_changer'>\n              <i className='fas fa-camera fa-md'></i>\n            </ImgChangeButton>\n            <File\n              id='profile_img_changer'\n              type='file'\n              accept='image/*'\n              onChange={onHandleChangeImg}\n            />\n          </ImgContainer>\n          <EditProfileForm name='edit_profile'>\n            <EditContainer>\n              <Label htmlFor='profile_email'>이메일(E-mail)</Label>\n              <Input\n                type='email'\n                name='email'\n                id='profile_email'\n                value={email}\n                disabled\n                notselected={true}\n              />\n            </EditContainer>\n            <EditContainer>\n              <Label htmlFor='profile_name'>이름(Name)</Label>\n              <Input\n                name='name'\n                id='profile_name'\n                value={userName}\n                onChange={onHandleNameChange}\n                notselected={false}\n              />\n            </EditContainer>\n            <SaveButton onClick={onHandleClickSaveButton}>저장</SaveButton>\n            {successUpdate && (\n              <ConfirmSpan color='#74b9ff'>저장 완료!</ConfirmSpan>\n            )}\n          </EditProfileForm>\n        </ContentsCotainer>\n        <SweetContainer>\n          <H2>My Sweets</H2>\n          <MySweetList />\n        </SweetContainer>\n      </ProfileContentContainer>\n    </MyProfileContainer>\n  );\n};\n\nexport default MyProfilePresenter;\n","import React, { useState } from 'react';\nimport Storage from '../API/Storage';\nimport { auth, updateProfile } from '../Firebase/firebase';\nimport MyProfilePresenter from './MyProfilePresenter';\nimport database from '../API/Database';\n\nconst MyProfileContainer = () => {\n  const { email, displayName, photoURL } = auth.currentUser;\n\n  const [userName, setUserName] = useState(displayName);\n  const [profileImg, setProfileImg] = useState(photoURL);\n  const [selectedFile, setSelectedFile] = useState('');\n  const [successUpdate, setSuccessUpdate] = useState(false);\n\n  const onHandleNameChange = (event) => {\n    setUserName(event.target.value);\n    setSuccessUpdate(false);\n  };\n\n  const updateUserProfile = (newInfo) => {\n    updateProfile(auth.currentUser, newInfo)\n      .then(() => {\n        database.updateUserInfo(newInfo);\n      })\n      .then(() => {\n        setSuccessUpdate(true);\n      });\n  };\n\n  const onHandleClickSaveButton = () => {\n    const newInfo = {};\n    let flag = false;\n    if (displayName !== userName) {\n      newInfo['displayName'] = userName;\n      flag = true;\n    }\n    if (photoURL !== profileImg) {\n      Storage.uploadImages(selectedFile)\n        .then(({ success }) => {\n          if (success) {\n            Storage.downloadImagesUrl(selectedFile)\n              .then(({ response, success }) => {\n                if (success) {\n                  newInfo['photoURL'] = response;\n                } else {\n                  new Error();\n                }\n              })\n              .then(() => {\n                updateUserProfile(newInfo);\n              });\n          }\n        })\n        .catch((error) =>\n          alert('프로필 이미지를 업데이트 하는 데 문제가 발생했습니다.')\n        );\n    } else if (flag) {\n      updateUserProfile(newInfo);\n    }\n  };\n\n  const onHandleChangeImg = (event) => {\n    setSuccessUpdate(false);\n    const { files } = event.target;\n\n    if (files && files[0]) {\n      const objectURL = URL.createObjectURL(files[0]);\n      setProfileImg(objectURL);\n      setSelectedFile(files[0]);\n    }\n  };\n\n  return (\n    <MyProfilePresenter\n      email={email}\n      userName={userName}\n      profileImg={profileImg}\n      onHandleNameChange={onHandleNameChange}\n      onHandleClickSaveButton={onHandleClickSaveButton}\n      onHandleChangeImg={onHandleChangeImg}\n      successUpdate={successUpdate}\n    />\n  );\n};\n\nexport default MyProfileContainer;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  width: 100%;\n  height: 200px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  row-gap: 20px;\n  justify-content: center;\n`;\n\nconst Icon = styled.i`\n  color: #e57373;\n`;\n\nconst Text = styled.span`\n  font-size: 18px;\n`;\n\nconst Welcome = ({ sign }) => {\n  return (\n    <Container>\n      <Icon className='fab fa-twitter fa-7x' />\n      <Text>Sweet에 오신 걸 환영합니다! {sign}을 해주세요.</Text>\n    </Container>\n  );\n};\n\nexport default Welcome;\n","import React from 'react';\nimport { Navlink } from '../Styles/NavbarStyles';\nimport {\n  Button,\n  ConfirmSpan,\n  Form,\n  FormContainer,\n  Input,\n  InputSubmit,\n  Label,\n  Span,\n} from '../Styles/SignStyles';\nimport Welcome from '../Welcome';\n\nconst SignInPresenter = ({\n  userEmail,\n  onHandleChange,\n  onHandleSubmit,\n  existingUser,\n  setExisting,\n  sendMail,\n}) => {\n  return (\n    <FormContainer>\n      <Welcome sign='로그인' />\n      <Form onSubmit={onHandleSubmit}>\n        <Label id='email'>이메일(E-mail)</Label>\n        <Input\n          name='email'\n          type='email'\n          placeholder='sweet@gmail.com'\n          value={userEmail}\n          onChange={onHandleChange}\n          required\n          autoFocus\n          onFocus={() => setExisting(true)}\n        />\n        <InputSubmit type='submit' name='signin_button' value='로그인' />\n        {!existingUser && (\n          <ConfirmSpan color='#d63031'>\n            가입되지 않은 계정입니다. 회원가입을 먼저 진행해 주세요.\n          </ConfirmSpan>\n        )}\n        {sendMail && (\n          <ConfirmSpan color='#74b9ff'>\n            메일 발신 완료! 메일함을 확인해주세요.\n          </ConfirmSpan>\n        )}\n      </Form>\n      <Span>아직 계정이 없으시다고요?</Span>\n      <Button name='signup_button'>\n        <Navlink to='/signup'>회원가입</Navlink>\n      </Button>\n    </FormContainer>\n  );\n};\n\nexport default SignInPresenter;\n","import React from 'react';\nimport { Navlink } from '../Styles/NavbarStyles';\nimport {\n  Button,\n  ConfirmSpan,\n  Form,\n  FormContainer,\n  Input,\n  InputSubmit,\n  Label,\n  Span,\n} from '../Styles/SignStyles';\nimport Welcome from '../Welcome';\n\nconst SignUpPresenter = ({\n  user,\n  email,\n  onHandleChange,\n  onHandleSubmit,\n  existing,\n  setExisting,\n  sendMail,\n}) => {\n  return (\n    <FormContainer>\n      <Welcome sign='회원가입' />\n      <Form onSubmit={onHandleSubmit}>\n        <Label id='name'>사용자 이름</Label>\n        <Input\n          name='name'\n          type='text'\n          placeholder='홍길동'\n          value={user}\n          onChange={onHandleChange}\n          onFocus={() => setExisting(false)}\n          required\n        />\n        <Label id='email'>이메일</Label>\n        <Input\n          name='email'\n          type='email'\n          placeholder='sweet@gmail.com'\n          value={email}\n          onChange={onHandleChange}\n          onFocus={() => setExisting(false)}\n          required\n        />\n        <InputSubmit type='submit' name='signin_button' value='회원가입' />\n        {existing && (\n          <ConfirmSpan color='#d63031'>\n            이미 사용 중인 이메일입니다. 다른 이메일로 가입해주세요.\n          </ConfirmSpan>\n        )}\n        {sendMail && (\n          <ConfirmSpan color='#74b9ff'>\n            메일 발신 완료! 메일함을 확인해주세요.\n          </ConfirmSpan>\n        )}\n      </Form>\n      <Span>이미 계정이 있으시다고요?</Span>\n      <Button name='signin_button'>\n        <Navlink to='/signin'>로그인</Navlink>\n      </Button>\n    </FormContainer>\n  );\n};\n\nexport default SignUpPresenter;\n","import React, { useState } from 'react';\nimport SignUpPresenter from './SignUpPresenter';\nimport {\n  auth,\n  sendSignInLinkToEmail,\n  actionCodeSettings,\n} from '../Firebase/firebase';\nimport database from '../API/Database';\n\nexport const createUserAuth = async (\n  userEmail,\n  callbackFn,\n  userName = null\n) => {\n  try {\n    sendSignInLinkToEmail(auth, userEmail, actionCodeSettings);\n    window.localStorage.setItem('emailForSignIn', userEmail);\n    if (userName) {\n      window.localStorage.setItem('userNameForSignUp', userName);\n    }\n    callbackFn(true);\n  } catch (error) {\n    alert('이메일 발송에 실패했습니다. 잠시 후 다시 시도해주세요.');\n  }\n};\n\nexport const checkExistingUser = (userEmail) => {\n  const { fetchData } = database;\n  const result = fetchData('users');\n\n  let check = false;\n\n  const bool = result\n    .then((snapshot) => {\n      const { error, data } = snapshot;\n      if (error) {\n        alert(\n          '유저 정보를 확인하는 데 실패했습니다. 잠시 후 다시 시도해주세요.'\n        );\n      } else {\n        data.forEach((item) => {\n          if (item.email === userEmail) {\n            check = true;\n          }\n        });\n      }\n    })\n    .then(() => check);\n\n  return bool;\n};\n\nconst SignUpContainer = () => {\n  const [userName, setUserName] = useState('');\n  const [userEmail, setUserEmail] = useState('');\n  const [existing, setExisting] = useState(false);\n  const [sendMail, setSendMail] = useState(false);\n\n  const onHandleChange = (event) => {\n    const {\n      target: { value, name },\n    } = event;\n\n    switch (name) {\n      case 'name':\n        setUserName(value);\n        break;\n      case 'email':\n        setUserEmail(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const onHandleSubmit = (event) => {\n    event.preventDefault();\n\n    checkExistingUser(userEmail)\n      .then((value) => {\n        if (value) {\n          setExisting(true);\n        } else {\n          createUserAuth(userEmail, setSendMail, userName);\n          setUserName('');\n          setUserEmail('');\n        }\n      })\n      .catch((error) =>\n        alert('예기치 못한 문제가 발생했습니다. 잠시 후 다시 시도해주세요.')\n      );\n  };\n\n  return (\n    <SignUpPresenter\n      user={userName}\n      email={userEmail}\n      onHandleChange={onHandleChange}\n      onHandleSubmit={onHandleSubmit}\n      existing={existing}\n      setExisting={setExisting}\n      sendMail={sendMail}\n    />\n  );\n};\nexport default SignUpContainer;\n","import React, { useState } from 'react';\nimport SignInPresenter from './SignInPresenter';\nimport { checkExistingUser, createUserAuth } from '../SignUp/SignUpContainer';\n\nconst SignInContainer = () => {\n  const [userEmail, setUserEmail] = useState('');\n  const [existingUser, setExisting] = useState(true);\n  const [sendMail, setSendMail] = useState(false);\n\n  const onHandleSubmit = (event) => {\n    event.preventDefault();\n    const check = checkExistingUser(userEmail);\n    check\n      .then((value) => {\n        if (value) {\n          createUserAuth(userEmail, setSendMail);\n        } else {\n          setExisting(false);\n        }\n      })\n      .catch((error) => {\n        alert('현재 로그인이 어렵습니다. 잠시 후 다시 시도해주세요.');\n      });\n  };\n\n  const onHandleChange = (event) => {\n    setUserEmail(event.target.value);\n  };\n\n  return (\n    <SignInPresenter\n      userEmail={userEmail}\n      onHandleChange={onHandleChange}\n      onHandleSubmit={onHandleSubmit}\n      existingUser={existingUser}\n      setExisting={setExisting}\n      sendMail={sendMail}\n    />\n  );\n};\n\nexport default SignInContainer;\n","import React from 'react';\nimport { Container, Span } from './Loading';\n\nconst NotFound = () => {\n  return (\n    <Container>\n      <Span>페이지를 찾을 수 없습니다.</Span>\n      <Span> 주소창을 다시 확인해주세요.</Span>\n    </Container>\n  );\n};\n\nexport default NotFound;\n","import {\n  auth,\n  isSignInWithEmailLink,\n  signInWithEmailLink,\n} from '../Firebase/firebase';\n\nfunction login() {\n  if (isSignInWithEmailLink(auth, window.location.href)) {\n    const tempEmail = window.localStorage.getItem('emailForSignIn');\n    if (!tempEmail) {\n      alert('유효한 이메일이 없습니다. 잠시 후 다시 시도해주세요.');\n    }\n    signInWithEmailLink(auth, tempEmail, window.location.href)\n      .then((result) => {\n        window.localStorage.removeItem('emailForSignIn');\n      })\n      .catch((error) => {\n        if (\n          error.code !== 'auth/network-request-failed' &&\n          error.code !== 'auth/email-already-in-use'\n        ) {\n          alert('loading for log in...');\n        }\n      });\n    return auth.currentUser ? true : false;\n  }\n}\n\nexport default login;\n","import React from 'react';\nimport { Redirect, Route } from 'react-router';\nimport login from './API/Login';\nimport Loading from './Pages/Loading';\n\nconst PublicRouter = ({ component: Component, user, loading, ...rest }) => {\n  return loading ? (\n    <Loading />\n  ) : !user && !login() ? (\n    <Route {...rest} render={(props) => <Component {...props} />} />\n  ) : (\n    <Redirect to='/' />\n  );\n};\n\nexport default PublicRouter;\n","import React from 'react';\nimport { Redirect, Route } from 'react-router';\nimport login from './API/Login';\nimport Loading from './Pages/Loading';\n\nconst PrivateRouter = ({ component: Component, user, loading, ...rest }) => {\n  return loading ? (\n    <Loading />\n  ) : user || login() ? (\n    <Route {...rest} render={(props) => <Component {...props} />} />\n  ) : (\n    <Redirect to='/signin' />\n  );\n};\n\nexport default PrivateRouter;\n","import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n    * {\n        box-sizing: border-box;\n        margin: 0;\n        padding: 0;\n    }\n    body {\n        margin: 0;\n    }\n\n    #root {\n        width: 100%;\n        height: 100%;\n    } \n`;\n\nexport default GlobalStyle;\n","import React, { useEffect, useState } from 'react';\nimport { HashRouter, Switch, Route } from 'react-router-dom';\nimport Home from './Home/HomeContainer';\nimport MyProfile from './MyProfile/MyProfileContainer';\nimport SignIn from './SignIn/SignInContainer';\nimport SignUp from './SignUp/SignUpContainer';\nimport NotFound from './Pages/NotFound';\nimport PublicRouter from './PublicRouter';\nimport PrivateRouter from './PrivateRouter';\nimport { auth, onAuthStateChanged } from './Firebase/firebase';\nimport GlobalStyle from './Styles/GlobalStyles';\n\nconst App = () => {\n  const [currentUser, setCurrentUser] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    onAuthStateChanged(auth, (user) => {\n      if (user) {\n        setCurrentUser(true);\n      }\n      setLoading(false);\n    });\n  }, []);\n\n  return (\n    <HashRouter>\n      <GlobalStyle />\n      <Switch>\n        <PrivateRouter\n          user={currentUser}\n          component={Home}\n          path='/'\n          loading={loading}\n          exact\n        />\n        <PrivateRouter\n          user={currentUser}\n          component={MyProfile}\n          path='/myprofile'\n          loading={loading}\n          exact\n        />\n        <PublicRouter\n          user={currentUser}\n          component={SignIn}\n          path='/signin'\n          loading={loading}\n          exact\n        />\n        <PublicRouter\n          user={currentUser}\n          component={SignUp}\n          path='/signup'\n          loading={loading}\n          exact\n        />\n        <Route component={NotFound} />\n      </Switch>\n    </HashRouter>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}